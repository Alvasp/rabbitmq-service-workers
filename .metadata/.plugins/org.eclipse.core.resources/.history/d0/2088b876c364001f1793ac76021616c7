package com.poc.reactive.demo.service;

import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.request;

import java.util.Optional;
import java.util.UUID;

import org.springframework.amqp.rabbit.core.RabbitTemplate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.poc.reactive.demo.dto.AddJobRequest;
import com.poc.reactive.demo.messaging.HandleImageRequestMessage;
import com.poc.reactive.demo.messaging.HandleImageResponseMessage;
import com.poc.reactive.demo.messaging.Resolution;
import com.poc.reactive.demo.repository.JobRepository;

@Service
public class JobService {

	@Autowired
	JobRepository repo;

	@Autowired
	RabbitTemplate template;

	public Optional<HandleImageResponseMessage> getJOBByUUID(String uuid) {
		return this.repo.getJOBByUUID(uuid);
	}

	public UUID saveJOBResponse(AddJobRequest addJob) {
		UUID identifier = UUID.randomUUID();

		HandleImageRequestMessage message = new HandleImageRequestMessage(addJob.filename(),
				new Resolution(addJob.resolution().width(), addJob.resolution().height()));

		template.convertAndSend("image-processing-exchange", addJob.type().getDescription(), message,
				messagePostProcessor -> {
					messagePostProcessor.getMessageProperties().setReplyTo("image-processing-queue-tasks-response");
					messagePostProcessor.getMessageProperties().setCorrelationId(identifier.toString());
					return messagePostProcessor;
				});

		return identifier;
	}
}
